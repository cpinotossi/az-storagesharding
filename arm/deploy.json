{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "defaultValue": "ru",
            "minLength": 3,
            "maxLength": 24,
            "type": "String",
            "metadata": {
                "description": "Prefix which will be added to all components"
            }
        },
        "myip": {
            "type": "String",
            "metadata": {
                "description": "IP whitelist to access the Storage Accounts directly. e.g. xx.xx.xx.xx"
            }
        },
        "storageDomain": {
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "defaultValue": "blob.core.windows.net",
            "allowedValues": [
                "blob.core.windows.net",
                "blob.core.chinacloudapi.cn"
            ],
            "metadata": {
                "description": "Azure Storage Blob Domain."
            }
        },
        "regionPairA": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "regionPairB": {
            "type": "string",
            "defaultValue": "northeurope",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "certificationCN": {
            "type": "String",
            "minLength": 1,
            "metadata": {
                "description": "CN of the Server Cerificate, same as the Domain name. e.g. www.customer.com"
            }
        }
    },
    "variables": {
        "storageAccount01Name": "[concat(parameters('prefix'),'001')]",
        "storageAccount02Name": "[concat(parameters('prefix'),'002')]",
        "storageAccountBlobContainerTestName": "test",
        "publicIP01Name": "[concat(parameters('prefix'),'-01-pip')]",
        "virtualNetwork01Name": "[concat(parameters('prefix'),'-01-appgw-vnet')]",
        "subnet01Name": "[concat(parameters('prefix'),'-01-appgw-subnet')]",
        "virtualNetwork01Ref": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork01Name'))]",
        "subnet01Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetwork01Name'), variables('subnet01Name'))]",
        "applicationGateway01Name": "[concat(parameters('prefix'),'-01-appgw')]",
        "applicationGateway01BackendAddressPoolName": "[concat(parameters('prefix'),'-01-appgw-backendpool')]",
        "applicationGateway01BackendHTTPSettingName": "[concat(parameters('prefix'),'-01-appgw-backendsetting')]",
        "applicationGateway01FrontPortName": "[concat(parameters('prefix'),'-01-appgw-frontport')]",
        "applicationGateway01FrontIPName": "[concat(parameters('prefix'),'-01-appgw-frontip')]",
        "applicationGateway01RoutingRuleName": "[concat(parameters('prefix'),'-01-appgw-routingrule')]",
        "applicationGateway01ListenerName": "[concat(parameters('prefix'),'-01-appgw-listener')]",
        "applicationGateway01ProbeName": "[concat(parameters('prefix'),'-01-appgw-probe')]",
        "userManagedIdentityName": "[concat(parameters('prefix'),'-umi')]",
        "userManagedIdentityId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userManagedIdentityName'))]",
        "trafficManagerProfileName": "[concat(parameters('prefix'),'-tmp')]",
        "trafficManagerRelativeName": "[concat(parameters('prefix'),'-tm')]",
        "trafficManagerEndpointName01": "[concat(parameters('prefix'),'-01-ep-tm')]",
        "keyVault01Name": "[concat(parameters('prefix'),'-01-kv')]",
        "keyVault01Certificate01Name": "[concat(parameters('prefix'),'-01-certificate-01-kv')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[variables('publicIP01Name')]",
            "location": "[parameters('regionPairA')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/trafficManagerProfiles",
            "apiVersion": "2018-04-01",
            "name": "[variables('trafficManagerProfileName')]",
            "location": "global",
            "properties": {
                "profileStatus": "Enabled",
                "trafficRoutingMethod": "Weighted",
                "dnsConfig": {
                    "relativeName": "[variables('trafficManagerRelativeName')]",
                    "ttl": 5
                },
                "monitorConfig": {
                    "profileMonitorStatus": "Online",
                    "protocol": "HTTPS",
                    "port": 443,
                    "path": "/test/test.txt",
                    "intervalInSeconds": 30,
                    "toleratedNumberOfFailures": 3,
                    "timeoutInSeconds": 10,
                    "customHeaders": [
                        {
                            "name": "host",
                            "value": "[parameters('certificationCN')]"
                        }
                    ]
                },
                "endpoints": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/trafficManagerProfiles', variables('trafficManagerProfileName')), concat('/externalEndpoints/', variables('trafficManagerEndpointName01')))]",
                        "name": "[variables('trafficManagerEndpointName01')]",
                        "type": "Microsoft.Network/trafficManagerProfiles/externalEndpoints",
                        "properties": {
                            "endpointStatus": "Enabled",
                            "endpointMonitorStatus": "Online",
                            "target": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP01Name'))).ipAddress]",
                            "weight": 1,
                            "priority": 1
                        }
                    }
                ],
                "trafficViewEnrollmentStatus": "Disabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[variables('virtualNetwork01Name')]",
            "location": "[parameters('regionPairA')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.17.0.0/16"
                    ]
                },
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            },
            "resources": [
                {
                    "type": "subnets",
                    "apiVersion": "2020-11-01",
                    "name": "[variables('subnet01Name')]",
                    "dependsOn": [
                        "[variables('virtualNetwork01Ref')]"
                    ],
                    "properties": {
                        "addressPrefix": "172.17.0.0/24",
                        "serviceEndpoints": [
                            {
                                "service": "Microsoft.Storage",
                                "locations": [
                                    "[parameters('regionPairA')]",
                                    "[parameters('regionPairA')]"
                                ]
                            },
                            {
                                "service": "Microsoft.KeyVault",
                                "locations": [
                                    "*"
                                ]
                            }
                        ],
                        "delegations": [],
                        "privateEndpointNetworkPolicies": "Enabled",
                        "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                }
            ]
        },
        /*
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('virtualNetwork01Name'), '/',variables('subnet01Name'))]",
            "dependsOn": [
                "[variables('virtualNetwork01Ref')]"
            ],
            "properties": {
                "addressPrefix": "172.17.0.0/24",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Storage",
                        "locations": [
                            "[parameters('regionPairA')]",
                            "[parameters('regionPairA')]"
                        ]
                    },
                    {
                        "service": "Microsoft.KeyVault",
                        "locations": [
                            "*"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        */
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-01-01",
            "name": "[variables('storageAccount01Name')]",
            "location": "[parameters('regionPairA')]",
            "dependsOn": [
                "[variables('subnet01Ref')]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "routingPreference": {
                    //"routingChoice": "InternetRouting",
                    "publishMicrosoftEndpoints": false,
                    "publishInternetEndpoints": false
                },
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "resourceAccessRules": [],
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                        {
                            "id": "[variables('subnet01Ref')]",
                            "action": "Allow",
                            "state": "Succeeded"
                        }
                    ],
                    "ipRules": [
                        {
                            "value": "[parameters('myip')]",
                            "action": "Allow"
                        }
                    ],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Cool"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('storageAccount01Name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount01Name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('storageAccount01Name'), '/default/', variables('storageAccountBlobContainerTestName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccount01Name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount01Name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "Blob"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-01-01",
            "name": "[variables('storageAccount02Name')]",
            "location": "[parameters('regionPairA')]",
            "dependsOn": [
                "[variables('subnet01Ref')]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "routingPreference": {
                    "routingChoice": "InternetRouting",
                    "publishMicrosoftEndpoints": false,
                    "publishInternetEndpoints": false
                },
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "resourceAccessRules": [],
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                        {
                            "id": "[variables('subnet01Ref')]",
                            "action": "Allow",
                            "state": "Succeeded"
                        }
                    ],
                    "ipRules": [
                        {
                            "value": "[parameters('myip')]",
                            "action": "Allow"
                        }
                    ],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Cool"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('storageAccount02Name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount02Name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('storageAccount02Name'), '/default/', variables('storageAccountBlobContainerTestName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccount02Name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount02Name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "Blob"
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2020-11-01",
            "name": "[variables('applicationGateway01Name')]",
            "location": "[parameters('regionPairA')]",
            "dependsOn": [
                "[variables('subnet01Ref')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP01Name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount01Name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount02Name'))]"
                //"[resourceId('Microsoft.KeyVault/vaults', variables('keyvault01Name'))]"
            ],
            "zones": [
                "1",
                "2",
                "3"
            ],
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[variables('userManagedIdentityId')]": {}
                }
            },
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet01Ref')]"
                            }
                        }
                    }
                ],
                "sslCertificates": [
                    {
                        "name": "[variables('keyVault01Certificate01Name')]",
                        "properties": {
                            "keyVaultSecretId": "[concat(reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVault01Name')),'2016-10-01').vaultUri,'secrets/',variables('keyVault01Certificate01Name'))]"
                        }
                    }
                ],
                "trustedRootCertificates": [],
                "trustedClientCertificates": [],
                "sslProfiles": [],
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('applicationGateway01FrontIPName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP01Name'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "[variables('applicationGateway01FrontPortName')]",
                        "properties": {
                            "port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('applicationGateway01BackendAddressPoolName')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[concat(variables('storageAccount01Name'),'.',parameters('storageDomain'))]"
                                },
                                {
                                    "fqdn": "[concat(variables('storageAccount02Name'),'.',parameters('storageDomain'))]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "[variables('applicationGateway01BackendHTTPSettingName')]",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": true,
                            "affinityCookieName": "ApplicationGatewayAffinity",
                            "requestTimeout": 20,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway01Name')), concat('/probes/', variables('applicationGateway01ProbeName')))]"
                            }
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "[variables('applicationGateway01ListenerName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway01Name')), '/frontendIPConfigurations/',variables('applicationGateway01FrontIPName'))]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway01Name')), '/frontendPorts/',variables('applicationGateway01FrontPortName'))]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway01Name')), '/sslCertificates/',variables('keyVault01Certificate01Name'))]"
                            },
                            "hostName": "[parameters('certificationCN')]",
                            "hostNames": [],
                            "requireServerNameIndication": true
                        }
                    }
                ],
                "urlPathMaps": [],
                "requestRoutingRules": [
                    {
                        "name": "[variables('applicationGateway01RoutingRuleName')]",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway01Name')), '/httpListeners/', variables('applicationGateway01ListenerName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway01Name')), '/backendAddressPools/',variables('applicationGateway01BackendAddressPoolName'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway01Name')), '/backendHttpSettingsCollection/',variables('applicationGateway01BackendHTTPSettingName'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('applicationGateway01ProbeName')]",
                        "properties": {
                            "protocol": "Https",
                            "path": "[concat('/',variables('storageAccountBlobContainerTestName'))]",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {
                                "statusCodes": [
                                    "404"
                                ]
                            }
                        }
                    }
                ],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "privateLinkConfigurations": [],
                "enableHttp2": false,
                "autoscaleConfiguration": {
                    "minCapacity": 1,
                    "maxCapacity": 125
                }
            }
        }
        /*,
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2021-04-01-preview",
            "name": "[variables('keyvault01Name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userManagedIdentityName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetwork01Name'), variables('subnet01Name'))]"
            ],
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[reference(variables('userManagedIdentityId')).tenantId]",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow",
                    "ipRules": [],
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetwork01Name'), variables('subnet01Name'))]",
                            "ignoreMissingVnetServiceEndpoint": false
                        }
                    ]
                },
                "accessPolicies": [
                    {
                        "tenantId": "[reference(variables('userManagedIdentityId')).tenantId]",
                        "objectId": "[reference(variables('userManagedIdentityId')).principalId]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "Get"
                            ],
                            "certificates": [
                                "Get",
                                "List"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": false,
                "softDeleteRetentionInDays": 7,
                "enableRbacAuthorization": false,
                "vaultUri": "[concat('https://', variables('keyvault01Name'), '.vault.azure.net/')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/keys",
            "apiVersion": "2021-04-01-preview",
            "name": "[concat(variables('keyvault01Name'), '/',variables('keyVault01Certificate01Name'))]",
            "location": "[parameters('regionPairA')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvault01Name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true,
                    "nbf": 1617801462,
                    "exp": 1649338062
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-04-01-preview",
            "name": "[concat(variables('keyvault01Name'), '/', variables('keyVault01Certificate01Name'))]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvault01Name'))]"
            ],
            "properties": {
                "contentType": "application/x-pkcs12",
                "attributes": {
                    "enabled": true,
                    "nbf": 1617801462,
                    "exp": 1649338062
                }
            }
        }
        */
    ]
}